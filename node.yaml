heat_template_version: 2015-10-15

description: >
  Generic TripleO Node, encapsulates node deployment and networking

parameters:
  CloudName:
    default: ''
    description: The DNS name of this cloud. E.g. ci-overcloud.tripleo.org
    type: string
  CloudDomain:
    default: ''
    type: string
    description: >
      The DNS domain used for the hosts. This should match the dhcp_domain
      configured in the Undercloud neutron. Defaults to localdomain.
  KeyName:
    default: default
    description: Name of an existing Nova key pair to enable SSH access to the instances
    type: string
    constraints:
      - custom_constraint: nova.keypair
  ServerMetadata:
    default: {}
    description: >
      Extra properties or metadata passed to Nova for the created nodes in
      the overcloud. It's accessible via the Nova metadata API.
    type: json
  Flavor:
    description: Flavor for control nodes to request when deploying.
    type: string
    constraints:
      - custom_constraint: nova.flavor
  Image:
    type: string
    constraints:
      - custom_constraint: glance.image
  ImageUpdatePolicy:
    default: 'REBUILD_PRESERVE_EPHEMERAL'
    description: What policy to use when reconstructing instances. REBUILD for rebuilds, REBUILD_PRESERVE_EPHEMERAL to preserve /mnt.
    type: string
  InstanceNameTemplate:
    default: 'instance-%08x'
    description: Template string to be used to generate instance names
    type: string
  Hostname:
    type: string
    default: '' # Defaults to Heat created hostname
  NodeIndex:
    type: number
    default: 0
  NodeExtraConfig:
    type: comma_delimited_list
    default: []

resources:

  Node:
    type: OS::Nova::Server
    properties:
      image: {get_param: Image}
      image_update_policy: {get_param: ImageUpdatePolicy}
      flavor: {get_param: Flavor}
      key_name: {get_param: KeyName}
#      networks:
#        - network: ctlplane
      user_data_format: SOFTWARE_CONFIG
      user_data: {get_resource: UserData}
      name: {get_param: Hostname}
      metadata: {get_param: ServerMetadata}

  # Combine the NodeAdminUserData and NodeUserData mime archives
  UserData:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: NodeAdminUserData}
        type: multipart
      - config: {get_resource: NodeUserData}
        type: multipart

  # Creates the "heat-admin" user if configured via the environment
  # Should return a OS::Heat::MultipartMime reference via OS::stack_id
  NodeAdminUserData:
    type: OS::TripleO::NodeAdminUserData

  # For optional operator additional userdata
  # Should return a OS::Heat::MultipartMime reference via OS::stack_id
  NodeUserData:
    type: OS::TripleO::NodeUserData

  # Interface for site-specific additional pre-deployment config
  NodeExtraConfigChain:
    type: OS::Heat::ResourceChain
    properties:
      resources: {get_param: NodeExtraConfig}
      resource_properties:
        server: {get_resource: Node}

outputs:
  ip_address:
    description: IP address of the server in the ctlplane network
    value: {get_attr: [Node, networks, ctlplane, 0]}
  hostname:
    description: Hostname of the server
    value: {get_attr: [Node, name]}
#  hosts_entry:
#    description: >
#      Server's IP address and hostname in the /etc/hosts format
#    value:
#      str_replace:
#        template: IP HOST.DOMAIN HOST CLOUDNAME
#        params:
#          IP: {get_attr: [NetIpMap, net_ip_map, {get_param: [ServiceNetMap, NodeHostnameResolveNetwork]}]}
#          DOMAIN: {get_param: CloudDomain}
#          HOST: {get_attr: [Node, name]}
#          CLOUDNAME: {get_param: CloudName}
  nova_server_resource:
    description: Heat resource handle for the Nova compute server
    value:
      {get_resource: Node}
